name: gh

on:
  push:
    branches:
    - master
    tags-ignore:
    - >-
      **
  pull_request:
    branches:
    - master
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
    - "[0-9]+.[0-9]+.*"
    branches-ignore:
    - >-
      **
  schedule:
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  - cron: 2 18 * * 5

jobs:
  tests:
    name: >-
      ${{ matrix.env.TOXENV }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.8
        os:
        - ubuntu-latest
        env:
        - TOXENV: linters
        - TOXENV: docs
        - TOXENV: packaging
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Calc Py SHA-256 Ver
      id: py-ver
      run: echo "::set-output name=sha256-hash::$(python -VV | sha256sum | cut -d' ' -f1)"
    - name: Pre-commit cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ steps.py-ver.outputs.sha256-hash }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ steps.py-ver.outputs.sha256-hash }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install tox
      run: |
        python -m pip install --upgrade tox
    - name: Log installed dists
      run: >-
        python -m pip freeze --all
    - name: >-
        Initialize tox envs
      run: |
        python -m tox --parallel auto --parallel-live --notest -vv
      env: ${{ matrix.env }}
    - name: Test with tox
      run: |
        python -m tox --parallel auto --parallel-live
      env: ${{ matrix.env }}
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: logs.zip
        path: .tox/**/log/

  publish:
    name: Publish to PyPI-ish registries
    needs:
    - tests
    runs-on: ubuntu-latest

    env:
      PY_COLORS: 1
      TOXENV: packaging
      TOX_PARALLEL_NO_SPINNER: 1

    steps:
    - name: Install tox
      run: >-
        python -m
        pip install
        --user
        tox
    - name: Check out src from Git
      uses: actions/checkout@v2
      with:
        fetch-depth: >-
          ${{
              (
                github.event_name == 'create' &&
                github.event.ref_type == 'tag'
              ) && 1 || 0
          }}
    - name: Drop Git tags from HEAD for non-tag-create events
      if: >-
        github.event_name != 'create' ||
        github.event.ref_type != 'tag'
      run: >-
        git tag --points-at HEAD
        |
        xargs git tag --delete
      shell: bash
    - name: Instruct setuptools-scm not to add a local version part
      if: >-
        github.event_name == 'push' &&
        github.ref == format(
          'refs/heads/{0}', github.event.repository.default_branch
        )
      run: |
        echo 'local_scheme = "no-local-version"' >> pyproject.toml
        git update-index --assume-unchanged pyproject.toml
    - name: Pre-populate tox env
      run: python -m tox -p auto --parallel-live -vvvv --notest
    - name: Build dists
      run: python -m tox -p auto --parallel-live -vvvv
    - name: Publish to test.pypi.org
      if: >-
        (
          github.event_name == 'push' &&
          github.ref == format(
            'refs/heads/{0}', github.event.repository.default_branch
          )
        ) || (
          github.event_name == 'create' &&
          github.event.ref_type == 'tag'
        )
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.testpypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish to pypi.org
      if: >-  # "create" workflows run separately from "push" & "pull_request"
        github.event_name == 'create' &&
        github.event.ref_type == 'tag'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
